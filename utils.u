[import test]

##
# Useless until I figure out how I should pass variables from a higher scope
# into the lambda.

line_func :: (line: const *u8) ;

Read_Lines :: (input: const *u8, callback: line_func) {
  start := input
  end   := input

  buf : [200]u8

  while *end != 0 {
    if *end == '\n' {
      len := end - start
      strncpy(buf as *u8, start, len)
      buf[len] = 0
      start = end + 1

      callback(buf)
    }

    end = end + 1
  }
}

##
# Given the bounds of a buffer, return the int

Read_Int :: (start: *u8, end: *u8) i32 {
  # TODO: should probably assert on the size here...
  buf : [10]u8

  len := end - start
  strncpy(buf as *u8, start, len)
  buf[len] = 0
  start = end + 1

  return atoi(buf as *u8)
}
